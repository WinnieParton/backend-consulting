name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOCKER_USERNAME: winniemonel

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Build with Maven
        run: mvn package -B
        continue-on-error: true
        id: build
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: jar
          path: target/*.jar
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: |
          docker build -t winniemonel/backend:${{ github.sha }} .
      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: winniemonel/backend:${{ github.sha }}
        if: success()
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=WinnieParton_backend-consulting -Dsonar.organization=backend-consulting -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}